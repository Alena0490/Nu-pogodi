let score = 0; // Bodov√© sk√≥re
let gameOver = false; // Stav hry
let level = 1; // Aktu√°ln√≠ √∫rove≈à
let eggSpeed = 50; // Poƒç√°teƒçn√≠ rychlost vaj√≠ƒçek (ms)
let eggGenerationInterval; // Promƒõnn√° pro ukl√°d√°n√≠ intervalu generov√°n√≠ vaj√≠ƒçek

let soundEnabled = false;
const soundToggle = document.getElementById("sound-toggle");
const backgroundSound = document.getElementById("background-sound");
    
    // P≈ôep√≠n√°n√≠ zvuku
    soundToggle.addEventListener("click", () => {
        soundEnabled = !soundEnabled;
  
// Nastaven√≠ hlasitosti
backgroundSound.volume = 0.2; // Maximum

        if (soundEnabled) {
            backgroundSound.play();
            soundToggle.textContent = "üîâ";
        } else {
            backgroundSound.pause();
            soundToggle.textContent = "üîá";
        }
    });

// Funkce pro vytvo≈ôen√≠ vaj√≠ƒçka
function createEgg(rowId) {
    const gameField = document.getElementById("game-container");
    const egg = document.createElement("div");
    egg.classList.add("egg");
    egg.textContent = "ü•ö";

    // Nastav√≠me startovac√≠ pozici vaj√≠ƒçka podle ≈ô√°dku
    switch (rowId) {
        case "row1":
            egg.style.top = "19.5%";
            egg.style.left = "5%";
            break;
        case "row2":
            egg.style.top = "19.5%";
            egg.style.left = "95%";
            break;
        case "row3":
            egg.style.top = "63%";
            egg.style.left = "5%";
            break;
        case "row4":
            egg.style.top = "61.5%";
            egg.style.left = "95%";
            break;
    }
    gameField.appendChild(egg); // P≈ôid√°me vaj√≠ƒçko do hern√≠ho pole
    moveEggOnPlank(egg, rowId); // Spust√≠me pohyb vaj√≠ƒçka
}

// Funkce pro pohyb vaj√≠ƒçka po prknƒõ
function moveEggOnPlank(egg, rowId) {
    let positionX = parseFloat(egg.style.left);
    let positionY = parseFloat(egg.style.top);
    const isLeftToRight = rowId === "row1" || rowId === "row3"; // Rozli≈°en√≠ smƒõru pohybu

    const interval = setInterval(() => {
        if (isLeftToRight) {
            positionX += 0.5; // Posun doprava
            positionY += 0.27; // Posun dol≈Ø (≈°ikm√Ω pohyb)
        } else {
            positionX -= 0.5; // Posun doleva
            positionY += 0.27; // Posun dol≈Ø (≈°ikm√Ω pohyb)
        }

        egg.style.left = positionX + "%";
        egg.style.top = positionY + "%";

        // Kdy≈æ vaj√≠ƒçko dos√°hne konce prkna
        if ((isLeftToRight && positionX >= 35) || (!isLeftToRight && positionX <= 65)) {
            clearInterval(interval);

            // Kontrola, zda vlk je na spr√°vn√©m prknƒõ
            if (currentWolfPosition === rowId) {
                catchEgg(egg);
            } else {
                fallToGround(egg);
            }
        }
    }, eggSpeed); // Pou≈æit√≠ aktu√°ln√≠ rychlosti vaj√≠ƒçek;
}

// Funkce pro chycen√≠ vaj√≠ƒçka
function catchEgg(egg) {
    egg.textContent = "‚úÖ";
    setTimeout(() => egg.remove(), 500);
    increaseScore();
}

// Funkce pro zv√Ω≈°en√≠ sk√≥re
function increaseScore() {
    score++;
    document.querySelector(".points").textContent = `Eggs: ${score}`;

    // Zkontrolujeme, zda je ƒças zv√Ω≈°it √∫rove≈à
    if (score % 20 === 0) {
        increaseLevel();
    }
}

// Funkce pro zv√Ω≈°en√≠ levelu
function increaseLevel() {
    level++;
    document.querySelector(".level").textContent = `Level: ${level}`;

    // Zrychlen√≠ vaj√≠ƒçek
    eggSpeed = Math.max(eggSpeed - 10, 10); // Minim√°ln√≠ rychlost = 10 ms
}

let lives = 0; // Poƒç√°teƒçn√≠ poƒçet ≈æivot≈Ø
const maxLives = 3; // Maxim√°ln√≠ poƒçet ≈æivot≈Ø
const livesElement = document.querySelector(".lives"); // Element pro zobrazen√≠ ≈æivot≈Ø

// Funkce pro ztr√°tu ≈æivota
function loseLife() {
lives++; // Zv√Ω≈°√≠me poƒçet ≈æivot≈Ø
const livesElement = document.querySelector(".lives");
livesElement.textContent = "üê£".repeat(lives); // Aktualizujeme zobrazen√≠ ≈æivot≈Ø
}

function endGame() {
    if (gameOver) return; // Pokud u≈æ hra skonƒçila, nic nedƒõlej

    gameOver = true; // Nastav√≠me stav hry na ukonƒçen√Ω

    // Zastav√≠me generov√°n√≠ vaj√≠ƒçek
    clearInterval(eggGenerationInterval);

    // Najdeme v≈°echna aktu√°ln√≠ vaj√≠ƒçka a odstran√≠me je
    const eggs = document.querySelectorAll(".egg");
    eggs.forEach((egg) => egg.remove());

    // Zastav√≠me v≈°echny aktivn√≠ intervaly pro pohyb vaj√≠ƒçek
    const highestIntervalId = setInterval(() => {}, 0); // Zjist√≠me nejvy≈°≈°√≠ ID intervalu
    for (let i = 0; i < highestIntervalId; i++) {
        clearInterval(i); // Zastav√≠me v≈°echny intervaly
    }

    // P≈ôehr√°n√≠ zvuku "Game Over"
    const gameOverSound = document.getElementById("game-over-39-199830");
    gameOverSound.play();

    // Zobrazen√≠ divu "Game Over"
    const gameOverDiv = document.querySelector(".game-over");
    gameOverDiv.style.display = "flex";
    gameOverDiv.innerHTML = `Game Over<br>Your score is: ${score}`;

    // Po kr√°tk√© prodlevƒõ zobraz√≠me sk√≥re
    setTimeout(() => {
        gameOverDiv.innerHTML = `Restart the game`;
    }, 4000); // Zmƒõn√≠ text po 2 s.

    // Kliknut√≠m kamkoliv restartujeme hru
    document.body.addEventListener("click", () => {
        location.reload();
    }, { once: true }); 
}

// Funkce pro ztr√°tu ≈æivota
function loseLife() {
    if (gameOver) return; // Pokud hra skonƒçila, neztr√°c√≠me dal≈°√≠ ≈æivoty

    lives++; // Zv√Ω≈°√≠me poƒçet ≈æivot≈Ø
    const livesElement = document.querySelector(".lives");
    livesElement.textContent = "üê£".repeat(lives); // Aktualizujeme zobrazen√≠ ≈æivot≈Ø

    // Kontrola, zda hra konƒç√≠
    if (lives >= maxLives) {
        endGame(); // Okam≈æit√© ukonƒçen√≠ hry
    }
}

// Funkce pro p√°d vaj√≠ƒçka
function fallToGround(egg) {
    let positionY = parseFloat(egg.style.top);

    const interval = setInterval(() => {
        positionY += 2; // P√°d dol≈Ø
        egg.style.top = positionY + "%";

        // Pokud vaj√≠ƒçko dos√°hne spodn√≠ ƒç√°sti hern√≠ho pole
        if (positionY >= 90) {
            clearInterval(interval);
            egg.textContent = "üê£"; // Zmƒõn√≠ se na ku≈ô√°tko
            setTimeout(() => egg.remove(), 2000); // Ku≈ô√°tko zmiz√≠ po 2 sekund√°ch

            // Ztr√°ta ≈æivota
            loseLife();
        }
    }, 50);
}

// Automatick√© generov√°n√≠ vaj√≠ƒçek
setInterval(() => {
    const rows = ["row1", "row2", "row3", "row4"];
    const randomRow = rows[Math.floor(Math.random() * rows.length)];
    createEgg(randomRow);
}, 2000);

// Funkce pro zobrazen√≠ spr√°vn√©ho vlka
function showWolf(wolfId, rowId) {
    currentWolfPosition = rowId;

    const wolves = document.querySelectorAll(".wolf img");
    wolves.forEach((wolf) => {
        wolf.style.display = "none";
    });

    const selectedWolf = document.getElementById(wolfId);
    if (selectedWolf) {
        selectedWolf.style.display = "block";
    }
}

// Ud√°lost pro stisk kl√°vesy
document.addEventListener("keydown", (event) => {
    switch (event.key) {
        case "1":
            showWolf("wolf1", "row3");
            break;
        case "3":
            showWolf("wolf3", "row4");
            break;
        case "7":
            showWolf("wolf7", "row1");
            break;
        case "9":
            showWolf("wolf9", "row2");
            break;
    }
});

// V√Ωchoz√≠ zobrazen√≠ vlka
document.addEventListener("DOMContentLoaded", () => {
    showWolf("wolf7", "row1");
});

/**Zaj√≠c */
document.addEventListener("DOMContentLoaded", () => {
    const rabbit = document.querySelector('.r3'); // V√Ωbƒõr zaj√≠ce .r3

    // Skryt√≠ zaj√≠ce na zaƒç√°tku
    rabbit.style.display = "none";

    function showRabbit() {
        rabbit.style.display = "block"; // Zobraz√≠ zaj√≠ce

        // Po 3 sekund√°ch zaj√≠ce skryje
        setTimeout(() => {
            rabbit.style.display = "none";

            // Nastaven√≠ n√°hodn√©ho intervalu pro dal≈°√≠ zobrazen√≠
            const randomTime = Math.random() * 10000 + 10000; // N√°hodn√Ω ƒças mezi 5 a≈æ 15 sekundami
            setTimeout(showRabbit, randomTime);
        }, 3000); // Viditeln√Ω p≈ôesnƒõ 3 sekundy
    }

    // Spu≈°tƒõn√≠ zobrazen√≠ zaj√≠ce
    showRabbit();
});


/****Zvonƒõn√≠ */
const bellSound = document.getElementById("bell"); // Element pro zvuk zvonku
let bellInterval; // Interval pro efekt zvonƒõn√≠

// Funkce pro spu≈°tƒõn√≠ efektu zvonƒõn√≠
function startBellEffect() {
    const bellSound = document.getElementById("bell"); // Element pro zvuk zvonku
    let bellInterval; // Interval pro efekt zvonƒõn√≠
    const r1 = document.querySelector('.r1');
    const r2 = document.querySelector('.r2');
    const r3 = document.querySelector('.r3');

    // Skryjeme .r3
    r3.style.display = 'none';

    // Ujist√≠me se, ≈æe .r1 a .r2 jsou viditeln√©
    r1.style.display = 'block';
    r2.style.display = 'block';

    let toggle = false;

    bellInterval = setInterval(() => {
        if (toggle) {
            r1.style.visibility = 'visible';
            r2.style.visibility = 'hidden';
        } else {
            r1.style.visibility = 'hidden';
            r2.style.visibility = 'visible';
        }
        toggle = !toggle;

    }, 200); // Interval 200 ms pro efekt zvonƒõn√≠
        // P≈ôehr√°n√≠ zvuku zvonku s nastaven√≠m na loop
        if (bellSound) {
            bellSound.loop = true;
            bellSound.play().catch(error => {
                console.error('Chyba p≈ôi p≈ôehr√°v√°n√≠ zvuku:', error);
            });
        }
    }


function loseLife() {
    if (gameOver) return;

    lives++;
    livesElement.textContent = "üê£".repeat(lives);

    if (lives === 2) {
        startBellEffect();
    }

    if (lives >= maxLives) {
        stopBellEffect();
        endGame();
    }
}

// Funkce pro zastaven√≠ efektu zvonƒõn√≠
function stopBellEffect() {
    // Zastav√≠me efekt zvonƒõn√≠, pokud bƒõ≈æ√≠
    if (bellInterval) {
        clearInterval(bellInterval);
        bellInterval = null;
    }

    // Zastav√≠me zvuk zvonku
    if (bellSound) {
        bellSound.pause();
        bellSound.currentTime = 0; // Nastav√≠me ƒças p≈ôehr√°v√°n√≠ na zaƒç√°tek
    }

    // Skryjeme v≈°echny prvky zvonku
    document.querySelector('.r1').style.display = 'none';
    document.querySelector('.r2').style.display = 'none';
}

    // Zastav√≠me efekt zvonƒõn√≠, pokud bƒõ≈æ√≠
    if (bellInterval) {
        clearInterval(bellInterval);
    }

    // Skryjeme v≈°echny prvky zvonku
    document.querySelector('.r1').style.display = 'none';
    document.querySelector('.r2').style.display = 'none';




